name: PR QA Automation

on:
  pull_request:
    types: [opened, synchronize]
    branches:
        - main

jobs:
    pr_qa_automation:
        permissions:
            pull-requests: write
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v2
            - name: Get pr summary'
              id: pr_info
              uses: actions/github-script@v7
              with: 
                script: |
                  const pr = await github.rest.pulls.get({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    pull_number: context.payload.pull_request.number
                  });
                  return {
                    pr_number: pr.data.number,
                    summary: pr.data.body,
                  }
            - name: Send data to Dify and get result file
              id: dify_request
              run: |
                response=$(curl -X POST 'https://api.dify.ai/v1/chat-messages' \
                    --header 'Authorization: Bearer ${{ secrets.DIFY_QA_AUTOMATION }}' \
                    --header 'Content-Type: application/json' \
                    --data-raw '{
                        "inputs": {},
                        "query": "${{fromJson(steps.pr_info.outputs.result).summary}}",
                        "response_mode": "streaming",
                        "conversation_id": "",
                        "user": "${{fromJson(steps.pr_info.outputs.result).pr_number}}",
                        "files": []
                    }'
                )
                echo "csv_text<<EOF" >> $GITHUB_OUTPUT
                echo "$response" >> $GITHUB_OUTPUT
                echo "EOF" >> $GITHUB_OUTPUT
            - name: Create csv file
              run: |
                echo '${{ steps.dify_request.outputs.csv_text }}' > test_case.csv
            - name: Upload csv file to PR
              uses: actions/upload-artifact@v4
              with:
                name: pr-test-case-upload
                path: test_case.csv
            - name: Add QA test case comment to PR
              uses: actions/github-script@v7
              with:
                script: |
                  const path = 'test_case.csv';
                  const download_url = `https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}`;
                  const prInfo = ${{toJson(steps.pr_info.outputs.result)}};
                  
                  let body = prInfo.summary || '';
                  body += '\n\n---\n\n';
                  body += '[Download the CSV result](${download_url})';
                  
                  await github.rest.pulls.update({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    pull_number: context.payload.pull_request.number,
                    body: body
                  });